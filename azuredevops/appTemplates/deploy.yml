parameters:
- name: "chartName"
  type: string
- name: "helmChartVersion"
  type: string
- name: "helmRepoName"
  type: string
- name: "acrName"
  type: string
- name: "aksCluster"
  type: string
- name: "aksResourceGroup"
  type: string
- name: "serviceConnection"
  type: string
- name: "namespace"
  type: string
- name: "environment"
  type: string
- name: "imageTag"
  type: string

steps:
  - checkout: self

  - task: AzureCLI@2
    inputs:
      azureSubscription: ${{parameters.serviceConnection}}
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |          

        echo "Set Helm OCI support"
        export HELM_EXPERIMENTAL_OCI=1

        echo "Login to ACR for Helm push"
        az acr login -n ${{parameters.acrName}}

        echo "Login to AKS"
        az aks get-credentials --name  ${{parameters.aksCluster}} --resource-group ${{parameters.aksResourceGroup}} --overwrite-existing

        echo "Pull Helm chart from ACR"
        helm pull oci://${{parameters.acrName}}.azurecr.io/${{parameters.helmRepoName}}/${{parameters.chartName}} --version ${{parameters.helmChartVersion}}

        echo "Updating image tag in ${{parameters.environment}}-values.yaml"
        sed -i "s/tag:.*/tag:  ${{parameters.imageTag}}/" ./${{parameters.chartName}}/${{parameters.environment}}-values.yaml
        cat ./${{parameters.chartName}}/${{parameters.environment}}-values.yaml
        
  - script: |
        echo "Workspace Directory: $(Pipeline.Workspace)"
        ls -R "$(Pipeline.Workspace)"
    displayName: Workspace Directory

  - task: HelmDeploy@1
    displayName: Helm Upgrade/Install
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscription: ${{parameters.serviceConnection}}
      azureResourceGroup: ${{parameters.aksResourceGroup}}
      kubernetesCluster: ${{parameters.aksCluster}}
      namespace: ${{parameters.namespace}}
      command: upgrade
      chartType: FilePath
      chartPath: './${{parameters.chartName}}-${{parameters.helmChartVersion}}.tgz'
      valueFile: './${{parameters.chartName}}/$(environment)-values.yaml'
      overrideValues: |       
        image.tag=$(imageTag)
      releaseName: ${{parameters.chartName}}
      install: true
      waitForExecution: true